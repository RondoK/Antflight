
    xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0" >
    <Header>
      <Title>
        Table
      </Title>
      <Shortcut>Table</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>Table</ID>
          <ToolTip>Table name for create.</ToolTip>
          <Default>Table</Default>
        </Literal>
      </Declarations>

      <Code Language="CSharp">
        <![CDATA[
		#region $Table$

        IQueryable<$Table$> $Table$s { get; }

        bool Create$Table$($Table$ instance);

        bool Update$Table$($Table$ instance);

        bool Remove$Table$(int id$Table$);

        #endregion 
        ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets> 



Для SqlRepository создадим сниппет sqlTable.snippet:

<CodeSnippets
    xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0" >
    <Header>
      <Title>
        Sql repository
      </Title>
      <Shortcut>sqltable</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>Table</ID>
          <ToolTip>Table name for create.</ToolTip>
          <Default>Table</Default>
        </Literal>
      </Declarations>

      <Code Language="CSharp">
        <![CDATA[
        
        public IQueryable<$Table$> $Table$s
        {
            get
            {
                return Db.$Table$s;
            }
        }

        public bool Create$Table$($Table$ instance)
        {
            if (instance.ID == 0)
            {
                db.$Table$s.InsertOnSubmit(instance);
                db.$Table$s.Context.SubmitChanges();
                return true;
            }

            return false;
        }

        public bool Update$Table$($Table$ instance)
        {
            $Table$ cache = Db.$Table$s.Where(p => p.ID == instance.ID).FirstOrDefault();
            if (cache != null)
            {
                //TODO : Update fields for $Table$
                db.$Table$s.Context.SubmitChanges();
                return true;
            }

            return false;
        }

        public bool Remove$Table$(int id$Table$)
        {
            $Table$ instance = db.$Table$s.Where(p => p.ID == id$Table$).FirstOrDefault();
            if (instance != null)
            {
                db.$Table$s.DeleteOnSubmit(instance);
                db.$Table$s.Context.SubmitChanges();
                return true;
            }

            return false;
        }
        ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>

